/**
 * @file input
 * @author xzh
 * @date 2019-09-25 16:15:43
 */

import { LitElement, html } from 'lit-element'
import { defineComponent } from '../common'

export default defineComponent('input')(
  class extends LitElement {
    static get properties() {
      return {
        size: {
          type: String,
          reflect: true,
        },
        value: {
          type: String,
          reflect: true,
        },
        placeholder: {
          type: String,
          reflect: true,
        },
        autofocus: {
          type: Boolean,
          reflect: true,
        }
      }
    }
  
    constructor() {
      super()
  
      this.size = 'default'
      this.value = ''
      this.placeholder = ''
      this.autofocus = false
    }

    firstUpdated() {
      if (this.value) {
        this.shadowRoot.querySelector('input').value = this.value
      }
    }

    handleInput(e) {
      this.value = e.target.value
  
      this.dispatchEvent(new CustomEvent('input'))
    }
  
    handleChange(e) {
      this.value = e.target.value
  
      this.dispatchEvent(new CustomEvent('change'))
    }
  
    handleKeydown(e) {
      if (e.keyCode === 13) {
        this.dispatchEvent(new CustomEvent('enter'))
      }
    }
  
    render() {
      return html`
        <input
          type="text"
          placeholder="${this.placeholder}"
          class="${this.size}"
          @change="${this.handleChange}"
          @input="${this.handleInput}"
          @keydown="${this.handleKeydown}"
          ?autofocus="${this.autofocus}"
        />
        <style>
          :host {
            width: 100%;
          }
  
          input {
            width: inherit;
            color: rgba(0,0,0,0.65);
            line-height: 1.5;
            background-color: #fff;
            background-image: none;
            border: 1px solid #d9d9d9;
            box-sizing: border-box;
            border-radius: 4px;
          }
  
          input:hover {
            border-color: #40a9ff;
          }
  
          input:focus {
            border-color: #40a9ff;
            outline: none;
          }
  
          .default {
            height: 32px;
            padding: 4px 11px;
            font-size: 14px;
          }
  
          .small {
            height: 24px;
            padding: 1px 7px;
            font-size: 12px;
          }
  
          .large {
            height: 40px;
            padding: 6px 11px;
            font-size: 16px;
          }
        </style>
      `
    }
  }
)
