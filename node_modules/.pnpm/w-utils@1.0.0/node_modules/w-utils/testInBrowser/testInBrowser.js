/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// identity function for calling harmony imports with the correct context
/******/ 	__webpack_require__.i = function(value) { return value; };
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, {
/******/ 				configurable: false,
/******/ 				enumerable: true,
/******/ 				get: getter
/******/ 			});
/******/ 		}
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = 8);
/******/ })
/************************************************************************/
/******/ ([
/* 0 */
/***/ (function(module, exports) {

// 获取url传参
function getQueryString(name) {
	var reg = new RegExp("(^|&)" + name + "=([^&]*)(&|$)");
	var r = window.location.search.substr(1).match(reg);
	if (r != null) return decodeURI(r[2]);
	return null;
}

// 比较两个数组是否相等 
function arrayEqual(arr1, arr2) {
	if (arr1 === arr2) return true;
	if (arr1.length !== arr2.length) return false;
	for (var i = 0; i < arr1.length; ++i) {
		if (arr1[i] !== arr2[i]) return false;
	}
	return true;
}

var setInterval2 = function () {
	return window.requestAnimationFrame || window.webkitRequestAnimationFrame || window.mozRequestAnimationFrame || function (callback) {
		window.setTimeout(callback, 1000 / 60);
	};
}();

module.exports = {
	getQueryString,
	arrayEqual,
	setInterval2
};

/***/ }),
/* 1 */
/***/ (function(module, exports, __webpack_require__) {

const other = __webpack_require__(0);
const cssClass = __webpack_require__(2);
const cookie = __webpack_require__(3);
const format = __webpack_require__(4);
const random = __webpack_require__(5);
const regexp = __webpack_require__(6);
const scroll = __webpack_require__(7);
// 
const getQueryString = other.getQueryString;
const arrayEqual = other.arrayEqual;
const setInterval2 = other.setInterval2;

const hasClass = cssClass.hasClass;
const addClass = cssClass.addClass;
const removeClass = cssClass.removeClass;

const getCookie = cookie.getCookie;
const setCookie = cookie.setCookie;
const removeCookie = cookie.removeCookie;

const formatPassTime = format.formatPassTime;
const formatRemainTime = format.formatRemainTime;

const randomColor = random.randomColor;
const randomNum = random.randomNum;
const randomString = random.randomString;

const isIdCard = regexp.isIdCard;
const isEmail = regexp.isEmail;
const isPhoneNum = regexp.isPhoneNum;
const isUrl = regexp.isUrl;

const getScrollTop = scroll.getScrollTop;
const getOffsetHeight = scroll.getOffsetHeight;
const getClientHeight = scroll.getClientHeight;
const setScroll = scroll.setScroll;
const goTop = scroll.goTop;
const goBottom = scroll.goBottom;

module.exports = {
	getQueryString,
	arrayEqual,
	setInterval2,

	hasClass,
	addClass,
	removeClass,

	getCookie,
	setCookie,
	removeCookie,

	formatPassTime,
	formatRemainTime,

	randomColor,
	randomNum,
	randomString,

	isIdCard,
	isEmail,
	isPhoneNum,
	isUrl,

	getScrollTop,
	getOffsetHeight,
	setScroll,
	goTop,
	goBottom
};

/***/ }),
/* 2 */
/***/ (function(module, exports) {

// 是否有class
function hasClass(ele, cls) {
    return new RegExp('(\\s|^)' + cls + '(\\s|$)').test(ele.className);
}

// 添加class
function addClass(ele, cls) {
    if (!hasClass(ele, cls)) {
        ele.className += ' ' + cls;
    }
}

// 移除class
function removeClass(ele, cls) {
    if (hasClass(ele, cls)) {
        var reg = new RegExp('(\\s|^)' + cls + '(\\s|$)');
        ele.className = ele.className.replace(reg, ' ');
    }
}
module.exports = {
    hasClass,
    addClass,
    removeClass
};

/***/ }),
/* 3 */
/***/ (function(module, exports) {

// 获取cookie
function getCookie(name) {
    var arr = document.cookie.replace(/\s/g, "").split(';');
    for (var i = 0; i < arr.length; i++) {
        var tempArr = arr[i].split('=');
        if (tempArr[0] == name) {
            return decodeURIComponent(tempArr[1]);
        }
    }
    return '';
}

// 设置cookie
function setCookie(name, value, days) {
    var date = new Date();
    date.setDate(date.getDate() + days);
    document.cookie = name + '=' + value + ';expires=' + date;
}

// 移除cookie
function removeCookie(name) {
    // 设置cookie过期
    setCookie(name, '1', -1);
}

module.exports = {
    getCookie,
    setCookie,
    removeCookie
};

/***/ }),
/* 4 */
/***/ (function(module, exports) {

// 格式化已过去时间
function formatPassTime(startTime) {
    var currentTime = Date.parse(new Date()),
        time = currentTime - startTime,
        day = parseInt(time / (1000 * 60 * 60 * 24)),
        hour = parseInt(time / (1000 * 60 * 60)),
        min = parseInt(time / (1000 * 60)),
        month = parseInt(day / 30),
        year = parseInt(month / 12);
    if (year) return year + "年前";
    if (month) return month + "个月前";
    if (day) return day + "天前";
    if (hour) return hour + "小时前";
    if (min) return min + "分钟前";else return '刚刚';
}

// 格式化剩余事件
function formatRemainTime(endTime) {
    var startDate = new Date(); //开始时间
    var endDate = new Date(endTime); //结束时间
    var t = endDate.getTime() - startDate.getTime(); //时间差
    var d = 0,
        h = 0,
        m = 0,
        s = 0;
    if (t >= 0) {
        d = Math.floor(t / 1000 / 3600 / 24);
        h = Math.floor(t / 1000 / 60 / 60 % 24);
        m = Math.floor(t / 1000 / 60 % 60);
        s = Math.floor(t / 1000 % 60);
    }
    return d + "天 " + h + "小时 " + m + "分钟 " + s + "秒";
}

module.exports = {
    formatPassTime,
    formatRemainTime
};

/***/ }),
/* 5 */
/***/ (function(module, exports) {

// 生成随机颜色
function randomColor() {
	return '#' + ('00000' + (Math.random() * 0x1000000 << 0).toString(16)).slice(-6);
}

// 生成范围内随机数
function randomNum(min, max) {
	return Math.floor(min + Math.random() * (max - min));
}

// 生成随机长度字符串(默认32位)
function randomString(len) {
	len = len || 32;
	var chars = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuwxyz0123456789';
	var maxPos = chars.length;
	var pwd = '';
	for (i = 0; i < len; i++) {
		pwd += chars.charAt(Math.floor(Math.random() * maxPos));
	}
	return pwd;
}
module.exports = {
	randomColor,
	randomNum,
	randomString
};

/***/ }),
/* 6 */
/***/ (function(module, exports) {

// 是否是身份证号
function isIdCard(str) {
    return (/^(^[1-9]\d{7}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d{3}$)|(^[1-9]\d{5}[1-9]\d{3}((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])((\d{4})|\d{3}[Xx])$)$/.test(str)
    );
}

// 是否是邮箱
function isEmail(str) {
    return (/\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*/.test(str)
    );
}

// 是否是手机号
function isPhoneNum(str) {
    return (/^1[345789]\d{9}$/.test(str)
    );
}

// 是否是Url
function isUrl(str) {
    return (/[-a-zA-Z0-9@:%._\+~#=]{2,256}\.[a-z]{2,6}\b([-a-zA-Z0-9@:%_\+.~#?&//=]*)/i.test(str)
    );
}

module.exports = {
    isIdCard,
    isEmail,
    isPhoneNum,
    isUrl
};

/***/ }),
/* 7 */
/***/ (function(module, exports, __webpack_require__) {

var setInterval2 = __webpack_require__(0).setInterval2;

// 获取滚动条滚上去的高度
function getScrollTop() {
	return document.documentElement && document.documentElement.scrollTop || document.body.scrollTop;
}

// 获取网页高度
function getOffsetHeight() {
	return document.documentElement && document.documentElement.offsetHeight || document.body.offsetHeight;
}

// 获取网页可视区域高度
function getClientHeight() {
	return document.documentElement && document.documentElement.clientHeight || window.innerHeight;
}

// 设置滚动条的位置
function setScroll(val) {
	if (typeof val !== 'number') {
		throw new Error('argument is not number');
		return;
	}
	window.scrollTo(0, val);
	return val;
}

// 返回网页顶部
function goTop() {
	var sTop = getScrollTop();
	if (sTop > 0) {
		var val = Math.floor(sTop / 10 * 8);
		setScroll(val);
		setInterval2(goTop);
	}
}

// 去网页底部
function goBottom() {
	var sTop = getScrollTop(),
	    seeHei = getClientHeight(),
	    hei = getOffsetHeight();
	if (sTop + seeHei < hei) {
		var val = sTop + Math.ceil((hei - sTop) / 10 * 1);
		setScroll(val);
		console.log(val);
		setInterval2(goBottom);
	}
}
module.exports = {
	getScrollTop,
	getOffsetHeight,
	getClientHeight,
	setScroll,
	goTop,
	goBottom
};

/***/ }),
/* 8 */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
Object.defineProperty(__webpack_exports__, "__esModule", { value: true });
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index__ = __webpack_require__(1);
/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__index___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__index__);


var a = document.querySelector('.a');
var b = document.querySelector('.b');
var c = document.querySelector('.c');
var d = document.querySelector('.d');
var e = document.querySelector('.e');

a.onclick = function () {
	alert(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["getScrollTop"])());
};
b.onclick = function () {
	__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["setScroll"])(300);
};
c.onclick = function () {
	__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["goBottom"])();
};
d.onclick = function () {
	__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["goTop"])();
};
console.log('测试getQueryString ' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["getQueryString"])('test'));
console.log('测试formatPassTime ' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["formatPassTime"])(1521992800204));
console.log('测试formatRemainTime ' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["formatRemainTime"])(1529999800204));
console.log('测试getOffsetHeight ' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__index__["getOffsetHeight"])());

/***/ })
/******/ ]);